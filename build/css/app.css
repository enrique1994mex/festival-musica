/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;700;900&display=swap");html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box;font-size:62.5%}*,:after,:before{box-sizing:inherit}body{font-family:Montserrat,sans-serif;font-size:1.6rem}body.fijar-body{overflow:hidden}p{color:#000;font-size:2rem}.contenedor{margin:0 auto;max-width:120rem;width:95%}a{text-decoration:none}img{max-width:100%}h1,h2,h3{margin:0}h1{font-size:4rem}h2{font-size:3.6rem}h3{font-size:3rem}.bg-verde{background-color:#4cbbb3}.bg-amarillo{background-color:#fef46d}.header{background-color:#4cbbb3}.header .contenido-header{padding:2.5rem 0}@media (min-width:768px){.header .contenido-header{align-items:center;display:flex;justify-content:space-between}}.header h1{color:#fff;margin-bottom:1rem;text-align:center}@media (min-width:768px){.header h1{margin-bottom:0}}.header.fijo{box-shadow:0 .3rem .4rem #444;position:fixed;width:100%}.navegacion-principal{display:flex;gap:2rem;justify-content:center}.navegacion-principal a{color:#fff;font-size:2rem}.navegacion-principal a:hover{color:#fef46d}.video{max-height:70rem;overflow:hidden;position:relative}.video .overlay{background:linear-gradient(135deg,#891c1e,rgba(158,55,242,.67) 67%,hsla(0,0%,100%,.5));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#891c1e",endColorstr="#80ffffff",GradientType=1);height:100%;position:absolute;width:100%}.video video{display:block;width:100%}.contenido-video{align-items:center;display:flex;height:100%;position:relative;z-index:1}.contenido-video h2{align-items:flex-start;color:#fff;display:flex;flex-direction:column;font-size:7rem}.contenido-video h2 span{background-color:#f53756;font-size:2rem;padding:1rem 2rem}.sobre-festival{padding:5rem 0}@media (min-width:768px){.sobre-festival{display:grid;gap:5rem;grid-template-columns:repeat(2,1fr)}}.contenido-festival{display:flex;flex-direction:column;justify-content:center}.contenido-festival h2{font-size:3rem}.contenido-festival .fecha{color:#f53756;font-weight:700}.contenido-festival .texto{line-height:1.5}.lineup{background-color:#f53756;padding:5rem 0}.lineup h3,.lineup p{color:#fff;text-align:center}.lineup .dia{margin:5rem 0;text-transform:uppercase}@media (min-width:768px){.escenarios-contenedor{display:grid;gap:5rem;grid-template-columns:repeat(2,1fr)}}.escenarios-contenedor .escenario{padding-top:2.5rem}.escenarios-contenedor .nombre-escenario{color:#000;font-size:2rem;font-weight:300}.escenarios-contenedor .nombre-escenario:after{background-position:50%;background-repeat:no-repeat;background-size:15rem;content:"";display:block;height:10rem;margin:2rem auto 0;width:20rem}.edm .nombre-escenario:after{background-image:url(../img/icono_edm.png)}.rock .nombre-escenario:after{background-image:url(../img/icono_rock.png)}.calendario{list-style:none;padding:0}.calendario li{font-weight:700;padding:2.5rem}.calendario li span{font-weight:400}.bg-verde .calendario li:nth-child(odd){background-color:#3a9a93}.bg-amarillo .calendario li:nth-child(odd){background-color:#fef03a}.galeria{padding:5rem 0}.galeria h3{text-align:center}.galeria-imagenes{display:grid;gap:5rem;grid-template-columns:repeat(2,1fr);list-style:none;margin-top:5rem;padding:0}@media (min-width:768px){.galeria-imagenes{display:grid;gap:2.5rem;grid-template-columns:repeat(4,1fr)}}@media (min-width:1200px){.galeria-imagenes{display:grid;gap:5rem;grid-template-columns:repeat(6,1fr)}}.overlay{background-color:rgba(0,0,0,.5);height:100%;position:fixed;top:0;width:100%}.btn-cerrar,.overlay{display:grid;place-items:center}.btn-cerrar{background-color:#fff;border-radius:50%;font-size:3rem;font-weight:900;height:5rem;width:5rem}.btn-cerrar:hover{cursor:pointer}.boletos{padding:5rem 0}.boletos h3{color:#fff;text-align:center}.boletos .contenedor-boletos{display:grid;gap:5rem;grid-template-columns:repeat(2,1fr);margin-top:5rem}.boletos .plan p{color:#fff;font-size:3rem;margin-bottom:2rem;text-align:center}.pase{border-spacing:0;width:100%}.pase thead{background-color:#f53756}.pase thead th{color:#fff;font-size:2rem;font-weight:300;padding:1.25rem;text-transform:uppercase}.pase tbody{background-color:#fff}.pase tbody td{border-bottom:1px solid #e1e1e1;padding:1.25rem}.pase tbody tr:last-of-type td{border:none}.pase tfoot{background-color:#752f97}.pase tfoot td{color:#fff;font-size:3rem}.footer,.pase tfoot td{padding:1.25rem;text-align:center}.footer{background-color:#f53756}.footer p{color:#fff;margin:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
